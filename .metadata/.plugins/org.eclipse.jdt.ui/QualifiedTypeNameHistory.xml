<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.sun.tools.javac.util.StringUtils"/>
    <fullyQualifiedTypeName name="java.util.stream.LongStream"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="java.util.LinkedHashMap"/>
    <fullyQualifiedTypeName name="lambda.ALambdaInterface"/>
    <fullyQualifiedTypeName name="lambda.Calculate"/>
    <fullyQualifiedTypeName name="java.lang.FunctionalInterface"/>
    <fullyQualifiedTypeName name="lambda.practical.CarCondition"/>
    <fullyQualifiedTypeName name="java.util.function.Predicate"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.util.LinkedHashSet"/>
    <fullyQualifiedTypeName name="com.sun.org.apache.xml.internal.utils.res.StringArrayWrapper"/>
    <fullyQualifiedTypeName name="com.sun.jndi.url.rmi.rmiURLContext"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="streams.practical.StringArray"/>
    <fullyQualifiedTypeName name="java.util.function.Supplier"/>
    <fullyQualifiedTypeName name="java.util.Map.Entry"/>
    <fullyQualifiedTypeName name="java.util.Hashtable"/>
    <fullyQualifiedTypeName name="java.awt.geom.FlatteningPathIterator"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="hackerrank.specialstring.LinkedList"/>
    <fullyQualifiedTypeName name="java.util.stream.Collector"/>
    <fullyQualifiedTypeName name="sun.util.locale.StringTokenIterator"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern"/>
    <fullyQualifiedTypeName name="java.util.regex.Pattern"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="java.lang.StringBuffer"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="hackerrank.ds.comparator.Solution"/>
    <fullyQualifiedTypeName name="hackerrank.srt.lexicographical.TestCase"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="hackerrank.grd.mindiff.TestCase"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="java.time.temporal.WeekFields"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.BufferedWriter"/>
    <fullyQualifiedTypeName name="java.io.InputStreamReader"/>
    <fullyQualifiedTypeName name="java.io.FileWriter"/>
    <fullyQualifiedTypeName name="java.util.stream.IntStream"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="java.util.TreeSet"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.util.stream.Stream"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
</qualifiedTypeNameHistroy>
